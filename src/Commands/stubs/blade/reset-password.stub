<?php

use Illuminate\Auth\Events\PasswordReset;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Password;
use Illuminate\Support\Facades\Session;
use Illuminate\Support\Str;
use Illuminate\Validation\Rules;

use function Livewire\Volt\{state, form, title, uses, rules};
use Mary\Traits\Toast;

title('{{ name }} Reset Password');
uses([Toast::class]);

state('token')->locked();
state([
    'email' => fn() => request()->string('email')->value(),
    'password' => '',
    'password_confirmation' => '',
]);

rules([
    'token' => ['required'],
    'email' => ['required', 'string', 'email'],
    'password' => ['required', 'string', 'confirmed', Rules\Password::defaults()],
]);

$resetPassword = function () {
    $this->validate();

    // Here we will attempt to reset the user's password. If it is successful we
    // will update the password on an actual user model and persist it to the
    // database. Otherwise we will parse the error and return the response.
    $status = Password::reset($this->only('email', 'password', 'password_confirmation', 'token'), function ($user) {
        $user
            ->forceFill([
                'password' => Hash::make($this->password),
                'remember_token' => Str::random(60),
            ])
            ->save();

        event(new PasswordReset($user));
    });

    // If the password was successfully reset, we will redirect the user back to
    // the application's home authenticated view. If there is an error we can
    // redirect them back to where they came from with their error message.
    if ($status != Password::PASSWORD_RESET) {
        $this->addError('email', __($status));

        return;
    }

    $this->success(__($status));

    $this->redirectRoute('{{ as }}login', navigate: true);
};

?>

<div class="min-h-screen flex items-center justify-center">
    <div class="bg-base-100 lg:p-10 py-8 px-4 rounded-lg max-w-md lg:mx-auto mx-4 flex-none grow">
        <h3 class="mb-4 font-bold text-2xl">Reset Password</h3>
        <x-form wire:submit="resetPassword">
            <x-input type="email" readonly wire:model="email" label="E-Mail Address" icon="o-at-symbol" inline />
            <x-input wire:model="password" type="password" label="Password" icon="o-lock-open" inline />
            <x-input wire:model="password_confirmation" type="password" label="Confirm Password" icon="o-lock-closed"
                inline />
            
            <div>
                <x-button spinner="resetPassword" type="submit" class="btn-primary w-full">Reset Password</x-button>
            </div>
            
        </x-form>
    </div>
</div>
